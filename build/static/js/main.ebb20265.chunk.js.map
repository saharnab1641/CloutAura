{"version":3,"sources":["components/BitCloutLogin/index.tsx","pages/FollowerView/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","margin","spacing","bt_big","fontSize","initLogin","accessLevel","Promise","resolve","reject","sourceId","source","user","identityWindow","window","open","undefined","handleLogin","payload","publicKeyAdded","close","removeEventListener","messageHandler","message","data","method","service","id","postMessage","handleInit","addEventListener","BitCloutLogin","props","classes","a","response","setAuthenticated","setUser","className","authenticated","Button","variant","color","onClick","style","float","initSign","transactionHex","embedFrame","frame","storageAccess","setSignable","toggleDisplay","toggleEmbedFrame","submitSignedHex","frameInit","requestFrameSign","accessLevelHmac","encryptedSeedHex","handlePostStorageApproval","handleMessage","browserSupported","console","log","hasStorageAccess","signedTransactionHex","createStyles","signin_btn","searchus","boxShadow","background","searchus1","searchus2","border","overflow","borderRadius","backgroundColor","transition","transitions","create","FollowerView","useState","setEmbedFrame","setFrame","setStorageAccess","displayFrame","setDisplayFrame","searchUsername","setSearchUsername","followerData","setFollowerData","page","setPage","tabNumber","setTabNumber","searchedUser","setSearchedUser","value","signedHex","axios","post","signedTxn","handleSign","event","followerPublicKey","publicKey","followedPublicKey","currentTarget","isUnfollow","txnHex","handleSearchSubmit","preventDefault","username","userSearch","notFollowingUserBack","handlePageChange","handleTabChange","newValue","Container","maxWidth","Grid","container","item","xs","textAlign","noValidate","autoComplete","onSubmit","TextField","placeholder","onChange","target","width","marginRight","height","InputProps","textOverflow","whiteSpace","display","justifyContent","alignItems","Card","Avatar","src","profilePicture","TableContainer","component","Paper","Tabs","indicatorColor","aria-label","Tab","label","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","href","rel","Pagination","count","Math","floor","size","title","frameBorder","position","top","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebb20265.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  bt_big : {\r\n      fontSize: '10px'\r\n    }\r\n}));\r\n\r\n\r\nconst initLogin = (accessLevel: number): Promise<any> => {\r\n  return new Promise((resolve, reject) => {\r\n    var sourceId: String = \"\";\r\n    var source: any = null;\r\n    var user: any = null;\r\n\r\n    let identityWindow: Window | null = window.open(\r\n      \"https://identity.bitclout.com/log-in?accessLevelRequest=\" + accessLevel,\r\n      undefined,\r\n      \"toolbar=no, width=800, height=1000, top=0, left=0\"\r\n    );\r\n\r\n    const handleInit = (message: any) => {\r\n      source = message.source;\r\n      sourceId = message.data.id;\r\n\r\n      source.postMessage(\r\n        {\r\n          id: sourceId,\r\n          service: \"identity\",\r\n        },\r\n        \"*\"\r\n      );\r\n    };\r\n\r\n    const handleLogin = (payload: any) => {\r\n      user = payload[\"users\"][payload.publicKeyAdded];\r\n      user[\"publicKey\"] = payload.publicKeyAdded;\r\n      if (identityWindow) {\r\n        identityWindow.close();\r\n        identityWindow = null;\r\n        window.removeEventListener(\"message\", messageHandler);\r\n        resolve(user);\r\n      }\r\n    };\r\n\r\n    const messageHandler = (message: any) => {\r\n      const {\r\n        data: { method, service, payload },\r\n      } = message;\r\n      if (service !== \"identity\") {\r\n        return;\r\n      }\r\n\r\n      if (method === \"initialize\") {\r\n        handleInit(message);\r\n      } else if (method === \"login\") {\r\n        handleLogin(payload);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"message\", messageHandler);\r\n  });\r\n};\r\n\r\nconst BitCloutLogin = (props: any): JSX.Element => {\r\n  const classes = useStyles();\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await initLogin(props.accessLevel);\r\n      props.setAuthenticated(true);\r\n      props.setUser(response);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div className = {classes.root}>\r\n      {!props.authenticated ? (\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          onClick={!props.authenticated ? handleLogin : undefined}\r\n          className={`signin_btn ${classes.bt_big}`}\r\n          style={{ float: \"right\" }}\r\n        >\r\n          Sign In\r\n        </Button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitCloutLogin;\r\n","import React, { FormEvent, useEffect, useState } from \"react\";\r\nimport BitCloutLogin from \"../../components/BitCloutLogin\";\r\nimport ScrollBox from \"../../components/ScrollBox\";\r\nimport SearchBox from \"../../components/SearchBox\";\r\nimport {\r\n  AppBar,\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Icon,\r\n  Paper,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tabs,\r\n  TextField,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst initSign = async (\r\n  transactionHex: String,\r\n  user: any,\r\n  embedFrame: boolean,\r\n  frame: any,\r\n  storageAccess: boolean,\r\n  setSignable: Function,\r\n  toggleDisplay: Function,\r\n  toggleEmbedFrame: Function,\r\n  submitSignedHex: Function\r\n) => {\r\n  let identityWindow: Window | null;\r\n  var frameInit: boolean = false;\r\n\r\n  if (!embedFrame) toggleEmbedFrame(true);\r\n\r\n  const requestFrameSign = (id: String, source: any): void => {\r\n    const payload = {\r\n      accessLevel: user.accessLevel,\r\n      accessLevelHmac: user.accessLevelHmac,\r\n      encryptedSeedHex: user.encryptedSeedHex,\r\n      transactionHex: transactionHex,\r\n    };\r\n    source.postMessage(\r\n      {\r\n        id: id,\r\n        service: \"identity\",\r\n        method: \"sign\",\r\n        payload: payload,\r\n      },\r\n      \"*\"\r\n    );\r\n  };\r\n\r\n  if (storageAccess) {\r\n    requestFrameSign(frame.id, frame.source);\r\n    return;\r\n  }\r\n\r\n  const handleInit = (message: any): void => {\r\n    message.source.postMessage(\r\n      {\r\n        id: message.data.id,\r\n        service: \"identity\",\r\n      },\r\n      \"*\"\r\n    );\r\n    if (!frameInit) {\r\n      message.source.postMessage(\r\n        {\r\n          id: message.data.id,\r\n          service: \"identity\",\r\n          method: \"info\",\r\n        },\r\n        \"*\"\r\n      );\r\n      frameInit = true;\r\n    }\r\n  };\r\n\r\n  const handlePostStorageApproval = (message: any): void => {\r\n    setSignable(message.data.id, message.source);\r\n    requestFrameSign(message.data.id, message.source);\r\n  };\r\n\r\n  const handleMessage = async (message: any) => {\r\n    const {\r\n      data: { method, service, payload },\r\n    } = message;\r\n    if (service !== \"identity\") {\r\n      return;\r\n    }\r\n\r\n    if (method === \"initialize\") {\r\n      handleInit(message);\r\n    } else if (\"hasStorageAccess\" in payload) {\r\n      if (!payload.browserSupported) {\r\n        console.log(\"Browser unsupported for signature\");\r\n        window.removeEventListener(\"message\", handleMessage);\r\n        toggleEmbedFrame(false);\r\n        return;\r\n      }\r\n      if (payload.hasStorageAccess) {\r\n        handlePostStorageApproval(message);\r\n      } else {\r\n        toggleDisplay(true);\r\n      }\r\n    } else if (method === \"storageGranted\") {\r\n      handlePostStorageApproval(message);\r\n    } else if (\"approvalRequired\" in payload) {\r\n      identityWindow = window.open(\r\n        `https://identity.bitclout.com/approve?tx=${transactionHex}`,\r\n        undefined,\r\n        \"toolbar=no, width=800, height=1000, top=0, left=0\"\r\n      );\r\n    } else if (\"signedTransactionHex\" in payload) {\r\n      await submitSignedHex(payload.signedTransactionHex);\r\n      identityWindow?.close();\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"message\", handleMessage);\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      signin_btn: {\r\n        float: \"right\",\r\n      },\r\n    },\r\n    searchus : {\r\n        boxShadow: \"0 0 0.1vw  0.1vw #fff7f7,   \\n  0 0 0.1vw  0.1vw #e97272, \\n  0 0   1vw  0.1vw #e50b0b,\\n  inset 0 0 1.5vw  0.1vw #e50b0b,\\n  inset 0 0 0.1vw  0.1vw #e97272,\\n  inset 0 0 0.1vw  0.1vw #fff7f7\",\r\n        background: \"black\",\r\n\r\n\r\n      },\r\n      searchus1 : {\r\n          background: \"black\",\r\n          color: \"white\",\r\n          fontSize: \"10px\"\r\n        },\r\n\r\n       searchus2 : {\r\n         border: '2px solid #e2e2e1',\r\n     overflow: 'hidden',\r\n     borderRadius: 4,\r\n     backgroundColor: 'black',\r\n     transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n     '&:hover': {\r\n       backgroundColor: 'black',\r\n       border: '2px solid red',\r\n     },\r\n\r\n          }\r\n  })\r\n);\r\n\r\nconst FollowerView = (props: any): JSX.Element => {\r\n  const classes = useStyles();\r\n  const [embedFrame, setEmbedFrame] = useState<boolean>(false);\r\n  const [frame, setFrame] = useState<any>({});\r\n  const [storageAccess, setStorageAccess] = useState<boolean>(false);\r\n  const [displayFrame, setDisplayFrame] = useState<boolean>(false);\r\n  const [authenticated, setAuthenticated] = useState<boolean>(false);\r\n  const [searchUsername, setSearchUsername] = useState<String>(\"\");\r\n  const [followerData, setFollowerData] = useState<any>(null);\r\n  const [page, setPage] = useState<number>(1);\r\n  const [tabNumber, setTabNumber] = useState<number>(0);\r\n  const [user, setUser] = useState<any>({});\r\n  const [searchedUser, setSearchedUser] = useState<any>(undefined);\r\n\r\n  const setSignable = (id: String, source: any): void => {\r\n    setStorageAccess(true);\r\n    setDisplayFrame(false);\r\n    setFrame({ id, source });\r\n  };\r\n\r\n  const toggleDisplay = (value: boolean): void => {\r\n    setDisplayFrame(value);\r\n  };\r\n\r\n  const toggleEmbedFrame = (value: boolean): void => {\r\n    setEmbedFrame(value);\r\n  };\r\n\r\n  const submitSignedHex = async (signedHex: String): Promise<void> => {\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:3010/api/v1/user/submittxn`,\r\n        {\r\n          signedTxn: signedHex,\r\n        }\r\n      );\r\n      console.log(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleSign = async (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ): Promise<void> => {\r\n    if (!authenticated) {\r\n      console.log(\"Please authenticate to continue\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:3010/api/v1/user/createfollowtxn`,\r\n        {\r\n          followerPublicKey: user.publicKey,\r\n          followedPublicKey: event.currentTarget.id,\r\n          isUnfollow: false,\r\n        }\r\n      );\r\n\r\n      initSign(\r\n        response.data.txnHex,\r\n        user,\r\n        embedFrame,\r\n        frame,\r\n        storageAccess,\r\n        setSignable,\r\n        toggleDisplay,\r\n        toggleEmbedFrame,\r\n        submitSignedHex\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    setSearchUsername(event.target.value);\r\n  };\r\n\r\n  const handleSearchSubmit = async (\r\n    event:\r\n      | React.FormEvent<HTMLFormElement>\r\n      | React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    try {\r\n      event.preventDefault();\r\n      const userSearch = await axios.post(\r\n        `http://localhost:3010/api/v1/user/getuser`,\r\n        { username: searchUsername }\r\n      );\r\n      if (!(\"error\" in userSearch.data)) {\r\n        setSearchedUser(userSearch.data);\r\n      }\r\n      const response = await axios.post(\r\n        `http://localhost:3010/api/v1/user/followerdifference`,\r\n        { username: searchUsername, notFollowingUserBack: true }\r\n      );\r\n      if (!(\"error\" in response.data)) {\r\n        setFollowerData(response.data);\r\n        setTabNumber(0);\r\n        setPage(1);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"Error fetching user\");\r\n    }\r\n  };\r\n\r\n  const handlePageChange = async (\r\n    event: React.ChangeEvent<unknown>,\r\n    value: number\r\n  ) => {\r\n    event.preventDefault();\r\n    const response = await axios.post(\r\n      `http://localhost:3010/api/v1/user/followerdifference`,\r\n      {\r\n        username: searchUsername,\r\n        notFollowingUserBack: tabNumber === 1 ? false : true,\r\n        page: value,\r\n      }\r\n    );\r\n    setPage(value);\r\n    if (!(\"error\" in response.data)) setFollowerData(response.data);\r\n  };\r\n\r\n  const handleTabChange = async (\r\n    event: React.ChangeEvent<{}>,\r\n    newValue: number\r\n  ): Promise<void> => {\r\n    if (newValue == tabNumber) return;\r\n    const response = await axios.post(\r\n      `http://localhost:3010/api/v1/user/followerdifference`,\r\n      {\r\n        username: searchUsername,\r\n        notFollowingUserBack: newValue === 1 ? false : true,\r\n      }\r\n    );\r\n    setFollowerData(response.data);\r\n    setPage(1);\r\n    setTabNumber(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page_followerview\">\r\n      <Container maxWidth=\"md\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <BitCloutLogin\r\n              accessLevel={4}\r\n              setUser={setUser}\r\n              setAuthenticated={setAuthenticated}\r\n              authenticated={authenticated}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n            <form\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              onSubmit={handleSearchSubmit}\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              <TextField\r\n               className= {classes.searchus2}\r\n                id=\"outlined-basic\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Username\"\r\n                onChange={handleSearchChange}\r\n                style={{ width: \"40rem\", marginRight: \"5rem\" , height: \"4rem\",}}\r\n                InputProps={{\r\n          style: {\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            overflow: 'hidden',\r\n            width: '100%',\r\n            color: 'white',\r\n            fontSize: \"12px\",\r\n          } }}\r\n              />\r\n            </form>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={handleSearchSubmit}\r\n              //className = {classes.searchus}\r\n            >\r\n              Search User\r\n            </Button>\r\n          </Grid>\r\n\r\n          {searchedUser ? (\r\n            <Grid item xs={12} style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n              <Card\r\n                style={{ height: \"7rem\", width: \"30rem\", textAlign: \"center\", backgroundColor: \"black\", color: \"white\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}\r\n              >\r\n                <Avatar src={searchedUser.profilePicture} style={{marginRight: \"5px\"}}></Avatar>\r\n                <h3>{searchedUser.username}</h3>\r\n              </Card>\r\n            </Grid>\r\n          ) : null}\r\n\r\n\r\n          <Grid item xs={12} className = {classes.searchus} style={{ textAlign: \"center\" }}>\r\n            {searchedUser ? (\r\n              <TableContainer component={Paper} className = {classes.searchus1}>\r\n                <Tabs\r\n                  value={tabNumber}\r\n                  indicatorColor=\"secondary\"\r\n                  onChange={handleTabChange}\r\n                  variant=\"fullWidth\"\r\n                  aria-label=\"tabs\"\r\n                  className = {classes.searchus1}\r\n                >\r\n                  <Tab label=\"They don't follow you back\" />\r\n                  <Tab label=\"You don't follow back\" />\r\n                  \r\n                </Tabs>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                  <TableHead >\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" className = {classes.searchus1}>Avatar</TableCell>\r\n                      <TableCell align=\"center\" className = {classes.searchus1}>Username</TableCell>\r\n                      <TableCell align=\"center\" className = {classes.searchus1}>Public Key</TableCell>\r\n                      <TableCell align=\"center\" className = {classes.searchus1}>Toggle Follow</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    { followerData && followerData.data? followerData.data.map((row: any) => (\r\n                      <TableRow key={row.username}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          <Avatar\r\n                            variant=\"square\"\r\n                            src={row.profilePicture}\r\n                          ></Avatar>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" className = {classes.searchus1}>\r\n                          <a href={\"https://bitclout.com/u/\" + row.username} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {row.username}\r\n                          </a>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" className = {classes.searchus1}>{row.publicKey}</TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={handleSign}\r\n                            id={row.publicKey}\r\n                          >\r\n                            {tabNumber==0?\"Unfollow\":\"Follow\"}\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )):null}\r\n                  </TableBody>\r\n                </Table>\r\n                <Pagination\r\n                  color=\"secondary\"\r\n                  count={Math.floor((followerData?followerData.count:0) / 10) + 1}\r\n                  page={page}\r\n                  onChange={handlePageChange}\r\n                  size=\"small\"\r\n                />\r\n              </TableContainer>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Container>\r\n      {embedFrame ? (\r\n        <iframe\r\n          title=\"Wallet Frame\"\r\n          id=\"identityframe\"\r\n          frameBorder=\"0\"\r\n          src=\"https://identity.bitclout.com/embed\"\r\n          style={{\r\n            height: \"100vh\",\r\n            width: \"100vw\",\r\n            display: displayFrame ? \"block\" : \"none\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n          }}\r\n        ></iframe>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowerView;\r\n","import React, { FormEvent, useState } from \"react\";\nimport FollowerView from \"./pages/FollowerView\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <FollowerView />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/css/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}